defaults:
  - _self_
hydra:
  run:
    dir: ${logdir}
_target_: agent.finetune.train_ppo_diffusion_img_agent.TrainPPOImgDiffusionAgent  

name: eval__${env_name}_ppo_diffusion_ta${horizon_steps}_td${denoising_steps}_tdf${ft_denoising_steps}
logdir: /home/zhouzhiting/Projects/dppo/sapien-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
base_policy_path: /data1/zhouzhiting/Data/panda_data/dppo/pretrain/cano_2/policy_step_254000_seed_0.ckpt  
normalization_path: /data1/zhouzhiting/Data/panda_data/dppo/pretrain/cano_2/norm_stats_1.pkl  

seed: 0 # 42
device: cuda:0
env_name: pick_and_place
obs_dim: 10  # tcp_pose_trans(3+6) + gripper_width (1)
action_dim: 10  # tcp_pose_trans(3+6) + gripper_width (1) 
denoising_steps: 50  
ft_denoising_steps: 10  
cond_steps: 1
img_cond_steps: 1 
horizon_steps: 20
act_steps: 10
use_ddim: True

env:
  n_envs: 1  #  1
  asynchronous: True # False
  name: ${env_name}
  env_type: "sapien"
  max_episode_steps: 400
  
  use_gui: False
  save_video: True

  best_reward_threshold_for_success: 1.0
  video_dir: /home/zhouzhiting/dppo/videos/pick_and_place
  use_image_obs: True
  reset_at_iteration: True  # mixture obj? single obj?
  normalization_path: ${normalization_path}
  act_steps: ${act_steps}  

shape_meta:
  obs:
    rgb:
      shape: [3, 224, 224] 
    state:
      shape: [10]
  action: 
    shape: [10]

wandb:
  entity: "zhou-zt21-tsinghua-university"
  project: dppo-sapien-${env_name}
  run: ${now:%H-%M-%S}_${name}
  mode: "disabled"  # "online" or "offline"

train:
  n_train_itr: 1
  n_critic_warmup_itr: 2 
  n_steps: 40
  gamma: 0.999 
  augment: True
  grad_accumulate: 15
  actor_lr: 5e-5
  actor_weight_decay: 0
  actor_lr_scheduler:
    first_cycle_steps: ${train.n_train_itr}
    warmup_steps: 0
    min_lr: 5e-5
  critic_lr: 1e-3
  critic_weight_decay: 0
  critic_lr_scheduler:
    first_cycle_steps: ${train.n_train_itr}
    warmup_steps: 0
    min_lr: 1e-3
  save_model_freq: 100
  val_freq: 10
  render:
    freq: 1
    num: 1
  # PPO specific
  reward_scale_running: True
  reward_scale_const: 1.0
  gae_lambda: 0.95
  batch_size: 500
  logprob_batch_size: 500
  update_epochs: 10
  vf_coef: 0.5
  target_kl: 1

model:
  _target_: model.diffusion.diffusion_ppo.PPODiffusion
  # HP to tune
  gamma_denoising: 0.99
  clip_ploss_coef: 0.01
  clip_ploss_coef_base: 0.001
  clip_ploss_coef_rate: 3
  randn_clip_value: 3
  min_sampling_denoising_std: 0.1
  min_logprob_denoising_std: 0.1
  #  
  use_ddim: ${use_ddim} 
  ddim_steps: ${ft_denoising_steps} 
  network_path: ${base_policy_path}
  eta:
    base_eta: 1
    input_dim: ${obs_dim}
    mlp_dims: [256, 256]
    action_dim: ${action_dim}
    min_eta: 0.1
    max_eta: 1.0
    _target_: model.diffusion.eta.EtaFixed
  actor:
    _target_: model.diffusion.diffusion_unet.DiffusionPolicy  
    prediction_horizon: ${horizon_steps}
    observation_horizon: ${cond_steps}
    action_dim: ${action_dim}
    global_obs_dim: ${obs_dim}
    num_inference_timesteps: ${ft_denoising_steps}
  # critic:
  #   _target_: model.common.critic.ViTCritic
  #   spatial_emb: 128
  #   augment: False
  #   backbone:
  #     _target_: model.common.vit.VitEncoder
  #     obs_shape: ${shape_meta.obs.rgb.shape}
  #     num_channel: ${eval:'3 * ${img_cond_steps}'} # each image patch is history concatenated
  #     img_h: ${shape_meta.obs.rgb.shape[1]}
  #     img_w: ${shape_meta.obs.rgb.shape[2]}
  #     cfg:
  #       patch_size: 8
  #       depth: 1
  #       embed_dim: 128
  #       num_heads: 4
  #       embed_style: embed2
  #       embed_norm: 0
  #   img_cond_steps: ${img_cond_steps}
  #   mlp_dims: [256, 256, 256]
  #   activation_type: Mish
  #   residual_style: True
  #   cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
  critic:
    _target_: model.resnet.critic.ResNetCritic
    mlp_dims: [256, 256, 256]
    activation_type: Mish
    residual_style: True
    backbone_ckpt: ${base_policy_path}
  ft_denoising_steps: ${ft_denoising_steps}
  horizon_steps: ${horizon_steps}
  obs_dim: ${obs_dim}
  action_dim: ${action_dim}
  denoising_steps: ${denoising_steps}
  device: ${device}

logging:
  log_interval: 10
  save_interval: 100
  eval_interval: 100
  n_eval_episodes: 10